document.querySelector('mutation-test-report-app').report = {"files":{"/workspace/tt/src/components/App.jsx":{"language":"javascript","mutants":[{"id":"2","location":{"end":{"column":86,"line":23},"start":{"column":14,"line":23}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"12","location":{"end":{"column":97,"line":31},"start":{"column":14,"line":31}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"10","location":{"end":{"column":35,"line":28},"start":{"column":14,"line":28}},"mutatorName":"BooleanLiteral","replacement":"props.todos.finished","status":"Timeout"},{"id":"1","location":{"end":{"column":86,"line":23},"start":{"column":14,"line":23}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Timeout"},{"id":"11","location":{"end":{"column":97,"line":31},"start":{"column":14,"line":31}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Timeout"},{"id":"0","location":{"end":{"column":2,"line":38},"start":{"column":24,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"6","location":{"end":{"column":44,"line":23},"start":{"column":14,"line":23}},"mutatorName":"EqualityOperator","replacement":"props.todos.items.length === 0","status":"Timeout"},{"id":"4","location":{"end":{"column":44,"line":23},"start":{"column":14,"line":23}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Timeout"},{"id":"5","location":{"end":{"column":44,"line":23},"start":{"column":14,"line":23}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Timeout"},{"id":"3","location":{"end":{"column":86,"line":23},"start":{"column":14,"line":23}},"mutatorName":"LogicalOperator","replacement":"props.todos.items.length !== 0 || <><List list={props.todos.items} /></>","status":"Timeout"},{"id":"13","location":{"end":{"column":97,"line":31},"start":{"column":14,"line":31}},"mutatorName":"LogicalOperator","replacement":"!_.isEmpty(props.todos.history) || <><ListWithTime list={props.todos.history} /></>","status":"Timeout"},{"id":"9","location":{"end":{"column":84,"line":28},"start":{"column":14,"line":28}},"mutatorName":"LogicalOperator","replacement":"!props.todos.finished || <><Current item={props.todos.current} /></>","status":"Timeout"},{"id":"15","location":{"end":{"column":59,"line":34},"start":{"column":30,"line":34}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"7","location":{"end":{"column":84,"line":28},"start":{"column":14,"line":28}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Timeout"},{"id":"8","location":{"end":{"column":84,"line":28},"start":{"column":14,"line":28}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Timeout"},{"id":"14","location":{"end":{"column":45,"line":31},"start":{"column":14,"line":31}},"mutatorName":"BooleanLiteral","replacement":"_.isEmpty(props.todos.history)","status":"Timeout"},{"id":"16","location":{"end":{"column":3,"line":46},"start":{"column":25,"line":40}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"17","location":{"end":{"column":2,"line":46},"start":{"column":37,"line":40}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"18","location":{"end":{"column":2,"line":54},"start":{"column":42,"line":48}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"22","location":{"end":{"column":59,"line":52},"start":{"column":26,"line":52}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"19","location":{"end":{"column":6,"line":53},"start":{"column":12,"line":49}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"20","location":{"end":{"column":39,"line":50},"start":{"column":16,"line":50}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"21","location":{"end":{"column":53,"line":51},"start":{"column":19,"line":51}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"}],"source":"/* eslint-disable react/prop-types */\nimport React from \"react\"\nimport { connect } from \"react-redux\"\nimport _ from \"lodash\"\nimport { count } from \"../redux/actions/timer\"\nimport { nextTodo } from \"../redux/actions/todos\"\nimport ErrorBoundary from \"../containers/ErrorBoundary\"\nimport List from \"../containers/List\"\nimport ListWithTime from \"../containers/ListWithTime\"\nimport Timer from \"../containers/Timer\"\nimport Current from \"../containers/Current\"\nimport AddTodo from \"../containers/AddTodo\"\nimport ClientList from \"../containers/ClientList\"\nimport { fetchClientInit } from \"../redux/actions/clients\"\n\nconst App = (props) => {\n    return (\n        <ErrorBoundary>\n            <p>Timer: </p>\n            <Timer />\n\n            <p>List:</p>\n            {props.todos.items.length !== 0 && <><List list={props.todos.items} /></>}\n            <p>Add a task:</p>\n            <AddTodo />\n\n            <p>Current: </p>\n            {!props.todos.finished && (<><Current item={props.todos.current} /></>)}\n\n            <p>History:</p>\n            {!_.isEmpty(props.todos.history) && <><ListWithTime list={props.todos.history} /></>}\n\n            <p>Clients:</p>\n            <button onClick={() => props.fetchClientInit()}>fetch</button>\n            <ClientList list={props.clients.items} />\n        </ErrorBoundary>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    value: state.timer.value,\n    timer: state.timer,\n    running: state.timer.running,\n    todos: state.todos,\n    clients: state.clients\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        count: () => dispatch(count()),\n        nextTodo: (time) => dispatch(nextTodo(time)),\n        fetchClientInit: () => dispatch(fetchClientInit())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n"},"/workspace/tt/src/containers/AddTodo.jsx":{"language":"javascript","mutants":[{"id":"24","location":{"end":{"column":3,"line":19},"start":{"column":28,"line":17}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"28","location":{"end":{"column":38,"line":21},"start":{"column":24,"line":21}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"23","location":{"end":{"column":2,"line":15},"start":{"column":28,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"25","location":{"end":{"column":2,"line":19},"start":{"column":43,"line":17}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"26","location":{"end":{"column":57,"line":18},"start":{"column":14,"line":18}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"27","location":{"end":{"column":55,"line":18},"start":{"column":47,"line":18}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"}],"source":"/* eslint-disable react/prop-types */\n\nimport React from \"react\"\nimport { connect } from \"react-redux\"\nimport * as todos from \"../redux/actions/todos\"\nimport onEnter from \"../services/keyboard.onEnter\"\n\nconst AddTodo = (props) => {\n    return (\n        <>\n            <label htmlFor=\"add\">add a todo</label>\n            <input type=\"text\" name=\"add\" id=\"add\" onKeyPress={onEnter(props.addTodo)} />\n        </>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    addTodo: (name) => dispatch(todos.addTodo({ name }))\n})\n\nexport default connect(state => state, mapDispatchToProps)(AddTodo)\n"},"/workspace/tt/src/containers/ClientList.jsx":{"language":"javascript","mutants":[{"id":"31","location":{"end":{"column":10,"line":19},"start":{"column":10,"line":6}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"30","location":{"end":{"column":10,"line":19},"start":{"column":10,"line":6}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"29","location":{"end":{"column":2,"line":21},"start":{"column":14,"line":4}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"33","location":{"end":{"column":18,"line":18},"start":{"column":46,"line":6}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"32","location":{"end":{"column":10,"line":19},"start":{"column":10,"line":6}},"mutatorName":"LogicalOperator","replacement":"props.list.length || props.list.map(item => <li key={item.id}>\n                {item.companyName} - {item.id}\n                {item.URL && <div>{item.URL}</div>}\n                {item.createdAt.toString()}\n                <hr />\n                {item.contact.gender === \"F\" && <span>Mme</span>}\n                {item.contact.gender === \"M\" && <span>Mr</span>}\n                {item.contact.lastName} {item.contact.firstName}\n                <hr />\n                {item.userName} - <i>{item.password}</i>\n\n            </li>)","status":"Timeout"},{"id":"34","location":{"end":{"column":51,"line":9},"start":{"column":18,"line":9}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"35","location":{"end":{"column":51,"line":9},"start":{"column":18,"line":9}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"36","location":{"end":{"column":51,"line":9},"start":{"column":18,"line":9}},"mutatorName":"LogicalOperator","replacement":"item.URL || <div>{item.URL}</div>","status":"Survived"},{"id":"46","location":{"end":{"column":64,"line":13},"start":{"column":18,"line":13}},"mutatorName":"LogicalOperator","replacement":"item.contact.gender === \"M\" || <span>Mr</span>","status":"Survived"},{"id":"39","location":{"end":{"column":65,"line":12},"start":{"column":18,"line":12}},"mutatorName":"LogicalOperator","replacement":"item.contact.gender === \"F\" || <span>Mme</span>","status":"Survived"},{"id":"43","location":{"end":{"column":45,"line":12},"start":{"column":42,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"44","location":{"end":{"column":64,"line":13},"start":{"column":18,"line":13}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"41","location":{"end":{"column":45,"line":12},"start":{"column":18,"line":12}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Timeout"},{"id":"37","location":{"end":{"column":65,"line":12},"start":{"column":18,"line":12}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Timeout"},{"id":"42","location":{"end":{"column":45,"line":12},"start":{"column":18,"line":12}},"mutatorName":"EqualityOperator","replacement":"item.contact.gender !== \"F\"","status":"Timeout"},{"id":"40","location":{"end":{"column":45,"line":12},"start":{"column":18,"line":12}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Timeout"},{"id":"45","location":{"end":{"column":64,"line":13},"start":{"column":18,"line":13}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Timeout"},{"id":"38","location":{"end":{"column":65,"line":12},"start":{"column":18,"line":12}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Timeout"},{"id":"47","location":{"end":{"column":45,"line":13},"start":{"column":18,"line":13}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Timeout"},{"id":"50","location":{"end":{"column":45,"line":13},"start":{"column":42,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"48","location":{"end":{"column":45,"line":13},"start":{"column":18,"line":13}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Timeout"},{"id":"49","location":{"end":{"column":45,"line":13},"start":{"column":18,"line":13}},"mutatorName":"EqualityOperator","replacement":"item.contact.gender !== \"M\"","status":"Timeout"}],"source":"/* eslint-disable react/prop-types */\nimport React from \"react\"\n\nconst List = (props) => (\n    <ul>\n        {props.list.length && props.list.map(item =>\n            <li key={item.id}>\n                {item.companyName} - {item.id}\n                {item.URL && <div>{item.URL}</div>}\n                {item.createdAt.toString()}\n                <hr />\n                {item.contact.gender === \"F\" && <span>Mme</span>}\n                {item.contact.gender === \"M\" && <span>Mr</span>}\n                {item.contact.lastName} {item.contact.firstName}\n                <hr/>\n                {item.userName} - <i>{item.password}</i>\n\n            </li>\n        )}\n    </ul>\n)\n\nexport default List\n"},"/workspace/tt/src/containers/Current.jsx":{"language":"javascript","mutants":[{"id":"51","location":{"end":{"column":2,"line":8},"start":{"column":17,"line":4}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"/* eslint-disable react/prop-types */\nimport React from \"react\"\n\nconst Current = ({ item }) => (\n    <>\n        <p>{item.label}</p>\n    </>\n)\n\nexport default Current\n"},"/workspace/tt/src/containers/ErrorBoundary.jsx":{"language":"javascript","mutants":[{"id":"52","location":{"end":{"column":6,"line":7},"start":{"column":25,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"53","location":{"end":{"column":41,"line":6},"start":{"column":22,"line":6}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"56","location":{"end":{"column":34,"line":11},"start":{"column":16,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"58","location":{"end":{"column":6,"line":17},"start":{"column":42,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"55","location":{"end":{"column":6,"line":12},"start":{"column":46,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"59","location":{"end":{"column":6,"line":27},"start":{"column":15,"line":19}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"54","location":{"end":{"column":39,"line":6},"start":{"column":34,"line":6}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Timeout"},{"id":"61","location":{"end":{"column":32,"line":20},"start":{"column":13,"line":20}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Timeout"},{"id":"60","location":{"end":{"column":32,"line":20},"start":{"column":13,"line":20}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Timeout"},{"id":"57","location":{"end":{"column":32,"line":11},"start":{"column":28,"line":11}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Timeout"},{"id":"62","location":{"end":{"column":10,"line":23},"start":{"column":34,"line":20}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"}],"source":"import React from \"react\"\n\nexport default class ErrorBoundary extends React.Component {\n    constructor (props) {\n        super(props)\n        this.state = { hasError: false }\n    }\n\n    static getDerivedStateFromError (_error) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true }\n    }\n\n    componentDidCatch (error, errorInfo) {\n        // You can also log the error to an error reporting service\n        console.log(error, errorInfo)\n    }\n\n    render () {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return <h1>Something went wrong.</h1>\n        }\n\n        // eslint-disable-next-line react/prop-types\n        return this.props.children\n    }\n}\n"},"/workspace/tt/src/containers/List.jsx":{"language":"javascript","mutants":[{"id":"63","location":{"end":{"column":2,"line":22},"start":{"column":14,"line":7}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"68","location":{"end":{"column":73,"line":16},"start":{"column":38,"line":16}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"66","location":{"end":{"column":10,"line":20},"start":{"column":10,"line":9}},"mutatorName":"LogicalOperator","replacement":"props.list.length || props.list.map(item => <li key={item.id}>\n                <p>\n                    {item.editing ? <input type=\"text\" placeholder={item.label} name=\"todo-label\" onKeyPress={onEnter(props.editTodo(item.id))} /> : <span>{item.label}</span>}\n                    <button onClick={() => props.toggleEditTodo(item.id)}>E</button>\n                    <button onClick={() => props.removeTodo(item.id)}>D</button>\n                </p>\n            </li>)","status":"Timeout"},{"id":"65","location":{"end":{"column":10,"line":20},"start":{"column":10,"line":9}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Timeout"},{"id":"64","location":{"end":{"column":10,"line":20},"start":{"column":10,"line":9}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Timeout"},{"id":"67","location":{"end":{"column":18,"line":19},"start":{"column":46,"line":9}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"71","location":{"end":{"column":2,"line":28},"start":{"column":43,"line":24}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"72","location":{"end":{"column":59,"line":25},"start":{"column":17,"line":25}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"69","location":{"end":{"column":69,"line":17},"start":{"column":38,"line":17}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"70","location":{"end":{"column":3,"line":28},"start":{"column":28,"line":24}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"75","location":{"end":{"column":65,"line":26},"start":{"column":59,"line":26}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"73","location":{"end":{"column":57,"line":25},"start":{"column":51,"line":25}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"78","location":{"end":{"column":67,"line":27},"start":{"column":55,"line":27}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"77","location":{"end":{"column":69,"line":27},"start":{"column":23,"line":27}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"74","location":{"end":{"column":67,"line":26},"start":{"column":21,"line":26}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"76","location":{"end":{"column":69,"line":27},"start":{"column":15,"line":27}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"79","location":{"end":{"column":38,"line":30},"start":{"column":24,"line":30}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"}],"source":"/* eslint-disable react/prop-types */\nimport React from \"react\"\nimport { connect } from \"react-redux\"\nimport * as todos from \"../redux/actions/todos\"\nimport onEnter from \"../services/keyboard.onEnter\"\n\nconst List = (props) => (\n    <ul>\n        {props.list.length && props.list.map(item =>\n            <li key={item.id}>\n                <p>\n                    {item.editing\n                        ? <input type=\"text\" placeholder={item.label} name=\"todo-label\" onKeyPress={onEnter(props.editTodo(item.id))} />\n                        : <span>{item.label}</span>\n                    }\n                    <button onClick={() => props.toggleEditTodo(item.id)}>E</button>\n                    <button onClick={() => props.removeTodo(item.id)} >D</button>\n                </p>\n            </li>\n        )}\n    </ul>\n)\n\nconst mapDispatchToProps = (dispatch) => ({\n    removeTodo: (id) => dispatch(todos.removeTodo({ id })),\n    toggleEditTodo: (id) => dispatch(todos.toggleEditTodo({ id })),\n    editTodo: (id) => name => dispatch(todos.editTodo({ id, name }))\n})\n\nexport default connect(state => state, mapDispatchToProps)(List)\n"},"/workspace/tt/src/containers/ListWithTime.jsx":{"language":"javascript","mutants":[{"id":"81","location":{"end":{"column":305,"line":7},"start":{"column":10,"line":7}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"84","location":{"end":{"column":304,"line":7},"start":{"column":34,"line":7}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"83","location":{"end":{"column":305,"line":7},"start":{"column":10,"line":7}},"mutatorName":"LogicalOperator","replacement":"list.length || list.map(item => <li key={item.id}><p>{item.label} - done in {Interval.fromDateTimes(item.started_at, item.stopped_at).toDuration(\"seconds\").toObject().seconds} seconds ({item.started_at.toString()}, {item.stopped_at.toString()})</p><p>total time in seconds: {item.time}</p></li>)","status":"Survived"},{"id":"80","location":{"end":{"column":2,"line":9},"start":{"column":14,"line":5}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"82","location":{"end":{"column":305,"line":7},"start":{"column":10,"line":7}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Timeout"},{"id":"85","location":{"end":{"column":164,"line":7},"start":{"column":155,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"}],"source":"/* eslint-disable react/prop-types */\nimport Interval from 'luxon/src/interval.js'\nimport React from \"react\"\n\nconst List = ({ list }) => (\n    <ul>\n        {list.length && list.map(item => <li key={item.id}><p>{item.label} - done in {Interval.fromDateTimes(item.started_at, item.stopped_at).toDuration(\"seconds\").toObject().seconds} seconds ({item.started_at.toString()}, {item.stopped_at.toString()})</p><p>total time in seconds: {item.time}</p></li>)}\n    </ul>\n)\n\nexport default List\n"},"/workspace/tt/src/containers/Timer.jsx":{"language":"javascript","mutants":[{"id":"87","location":{"end":{"column":52,"line":13},"start":{"column":32,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"86","location":{"end":{"column":2,"line":24},"start":{"column":26,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"90","location":{"end":{"column":79,"line":15},"start":{"column":75,"line":15}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Timeout"},{"id":"93","location":{"end":{"column":93,"line":17},"start":{"column":50,"line":17}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"95","location":{"end":{"column":39,"line":19},"start":{"column":31,"line":19}},"mutatorName":"BooleanLiteral","replacement":"enabled","status":"Timeout"},{"id":"89","location":{"end":{"column":115,"line":15},"start":{"column":55,"line":15}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"91","location":{"end":{"column":112,"line":15},"start":{"column":97,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"88","location":{"end":{"column":83,"line":13},"start":{"column":64,"line":13}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"92","location":{"end":{"column":39,"line":17},"start":{"column":31,"line":17}},"mutatorName":"BooleanLiteral","replacement":"enabled","status":"Timeout"},{"id":"94","location":{"end":{"column":92,"line":17},"start":{"column":71,"line":17}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"97","location":{"end":{"column":79,"line":19},"start":{"column":74,"line":19}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"96","location":{"end":{"column":80,"line":19},"start":{"column":50,"line":19}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"100","location":{"end":{"column":3,"line":36},"start":{"column":28,"line":32}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"98","location":{"end":{"column":3,"line":30},"start":{"column":25,"line":26}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"99","location":{"end":{"column":2,"line":30},"start":{"column":37,"line":26}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"101","location":{"end":{"column":2,"line":36},"start":{"column":43,"line":32}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"103","location":{"end":{"column":67,"line":34},"start":{"column":18,"line":34}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"102","location":{"end":{"column":41,"line":33},"start":{"column":12,"line":33}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"104","location":{"end":{"column":57,"line":35},"start":{"column":15,"line":35}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"}],"source":"/* eslint-disable react/prop-types */\n\nimport React from \"react\"\nimport ReactInterval from \"react-interval\"\nimport { connect } from \"react-redux\"\nimport * as timer from \"../redux/actions/timer\"\nimport * as todos from \"../redux/actions/todos\"\n\nconst Timer = (props) => {\n    const { enabled, timeout, value } = props\n    return (\n        <>\n            <ReactInterval {...{ timeout, enabled }} callback={() => props.count()} />\n            <br/>\n            <button disabled={enabled} onClick={() => { props.toggleTimer(true); props.nextTodo({ time: value }) } }>Start</button>\n            <br/>\n            <button disabled={!enabled} onClick={() => props.nextTodo({ time: props.value })} >next</button>\n            <br/>\n            <button disabled={!enabled} onClick={() => props.toggleTimer(false)}>Stop</button>\n            <br/>\n            {value}\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    enabled: state.timer.enabled,\n    timeout: state.timer.timeout,\n    value: state.timer.value\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    count: () => dispatch(timer.count()),\n    toggleTimer: (toggler) => dispatch(timer.toggleTimer(toggler)),\n    nextTodo: (value) => dispatch(todos.nextTodo(value))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer)\n"},"/workspace/tt/src/main.jsx":{"language":"javascript","mutants":[{"id":"105","location":{"end":{"column":90,"line":8},"start":{"column":85,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"}],"source":"import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport App from \"./components/App\"\nimport { Provider } from \"react-redux\"\nimport store from \"./redux/store\"\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById(\"app\"))\n"},"/workspace/tt/src/redux/actions/clients.js":{"language":"javascript","mutants":[{"id":"110","location":{"end":{"column":53,"line":14},"start":{"column":34,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"107","location":{"end":{"column":45,"line":10},"start":{"column":30,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"109","location":{"end":{"column":47,"line":12},"start":{"column":31,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"111","location":{"end":{"column":59,"line":15},"start":{"column":37,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"113","location":{"end":{"column":55,"line":17},"start":{"column":35,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"106","location":{"end":{"column":39,"line":9},"start":{"column":27,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"112","location":{"end":{"column":59,"line":16},"start":{"column":37,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"108","location":{"end":{"column":41,"line":11},"start":{"column":28,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"116","location":{"end":{"column":2,"line":31},"start":{"column":40,"line":26}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"115","location":{"end":{"column":6,"line":23},"start":{"column":12,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"114","location":{"end":{"column":2,"line":24},"start":{"column":37,"line":19}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"117","location":{"end":{"column":6,"line":30},"start":{"column":12,"line":27}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"118","location":{"end":{"column":2,"line":38},"start":{"column":38,"line":33}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"119","location":{"end":{"column":6,"line":37},"start":{"column":12,"line":34}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"121","location":{"end":{"column":6,"line":47},"start":{"column":24,"line":40}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"122","location":{"end":{"column":104,"line":43},"start":{"column":29,"line":43}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"129","location":{"end":{"column":2,"line":54},"start":{"column":46,"line":52}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"123","location":{"end":{"column":81,"line":45},"start":{"column":19,"line":45}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"124","location":{"end":{"column":79,"line":45},"start":{"column":57,"line":45}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"125","location":{"end":{"column":65,"line":46},"start":{"column":20,"line":46}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"128","location":{"end":{"column":42,"line":50},"start":{"column":12,"line":50}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"120","location":{"end":{"column":2,"line":48},"start":{"column":43,"line":39}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"126","location":{"end":{"column":63,"line":46},"start":{"column":51,"line":46}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"127","location":{"end":{"column":2,"line":51},"start":{"column":39,"line":49}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"130","location":{"end":{"column":51,"line":53},"start":{"column":12,"line":53}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"131","location":{"end":{"column":2,"line":57},"start":{"column":44,"line":55}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"132","location":{"end":{"column":49,"line":56},"start":{"column":12,"line":56}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"}],"source":"/**\n *  @file redux/actions/client.js\n *  @test redux/actions/client.test.js\n *  @description Defines the actions to manage clients\n */\nimport axios from \"axios\"\nimport Axios from \"axios\"\n\nexport const ADD_CLIENT = \"ADD_CLIENT\"\nexport const REMOVE_CLIENT = \"REMOVE_CLIENT\"\nexport const EDIT_CLIENT = \"EDIT_CLIENT\"\nexport const ARCHIVE_CLIENT = \"ARCHIVE_CLIENT\"\n\nexport const FETCH_CLIENT_INIT = \"FETCH_CLIENT_INIT\"\nexport const FETCH_CLIENT_RUNNING = \"FETCH_CLIENT_RUNNING\"\nexport const FETCH_CLIENT_SUCCESS = \"FETCH_CLIENT_SUCCESS\"\nexport const FETCH_CLIENT_ERROR = \"FETCH_CLIENT_ERROR\"\n\nexport function addClient (payload) {\n    return {\n        type: ADD_CLIENT,\n        payload\n    }\n}\n\nexport function removeClient (payload) {\n    return {\n        type: REMOVE_CLIENT,\n        payload\n    }\n}\n\nexport function editClient (payload) {\n    return {\n        type: EDIT_CLIENT,\n        payload\n    }\n}\nexport function fetchClientInit (payload) {\n    return dispatch => {\n        dispatch(fetchClientRunning)\n        const url = payload.url\n            ? payload.url : \"https://3000-ee3a291c-1bfc-4163-90a5-fa09a6cbe864.ws-eu01.gitpod.io/items\"\n        return Axios.get(url)\n            .then(result => dispatch(fetchClientSuccess({ items: result.data })))\n            .catch(e => dispatch(fetchClientError({ error: e })))\n    }\n}\nexport function fetchClientRunning () {\n    return { type: FETCH_CLIENT_RUNNING }\n}\nexport function fetchClientSuccess (payload) {\n    return { type: FETCH_CLIENT_SUCCESS, payload }\n}\nexport function fetchClientError (payload) {\n    return { type: FETCH_CLIENT_ERROR, payload }\n}\n"},"/workspace/tt/src/redux/actions/timer.js":{"language":"javascript","mutants":[{"id":"133","location":{"end":{"column":37,"line":15},"start":{"column":26,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"134","location":{"end":{"column":43,"line":25},"start":{"column":29,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"135","location":{"end":{"column":43,"line":27},"start":{"column":29,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"136","location":{"end":{"column":29,"line":37},"start":{"column":22,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"137","location":{"end":{"column":39,"line":48},"start":{"column":27,"line":48}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"140","location":{"end":{"column":2,"line":72},"start":{"column":39,"line":67}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"138","location":{"end":{"column":2,"line":60},"start":{"column":36,"line":55}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"143","location":{"end":{"column":6,"line":78},"start":{"column":12,"line":75}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"142","location":{"end":{"column":2,"line":79},"start":{"column":39,"line":74}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"139","location":{"end":{"column":6,"line":59},"start":{"column":12,"line":56}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"144","location":{"end":{"column":2,"line":91},"start":{"column":26,"line":89}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"146","location":{"end":{"column":2,"line":104},"start":{"column":30,"line":102}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"145","location":{"end":{"column":27,"line":90},"start":{"column":12,"line":90}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"141","location":{"end":{"column":6,"line":71},"start":{"column":12,"line":68}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"147","location":{"end":{"column":32,"line":103},"start":{"column":12,"line":103}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"}],"source":"/**\n *  @file redux/actions/timer.js\n *  @test redux/actions/timer.test.js\n *  @description Defines the actions to manage the timer\n */\n\n/**\n * @description ADD_TIMER actionType.\n * @type String\n * @example\n *  ```js\n *      dispatch({ type: ADD_TIMER, payload: { timer: 0 } }) // ie: dispatch(addTimer({timer: 0}))\n *  ```\n */\nexport const ADD_TIMER = \"ADD_TIMER\"\n\n/**\n * @description REMOVE_TIMER actionType.\n * @type String\n * @example\n *  ```js\n *      dispatch({ type: REMOVE_TIMER, payload: { id: 1 } }) // ie: dispatch(removeTimer({id: 1}))\n *  ```\n */\nexport const REMOVE_TIMER = \"REMOVE_TIMER\"\n\nexport const TOGGLE_TIMER = \"TOGGLE_TIMER\"\n\n/**\n * @description: Increments the timer by a value defined in the reducer, at a tick defined in the container\n * @type String\n * @example\n *  ```js\n *      dispatch({ type: COUNT }) // ie: dispatch(count())\n * ```\n */\nexport const COUNT = \"COUNT\"\n\n/**\n * @description Stops the increment of the timer\n * @type String\n * @deprecated\n * @example\n *  ```js\n *      dispatch({ type: STOP_COUNT }) // ie: dispatch(stopCount())\n * ```\n */\nexport const STOP_COUNT = \"STOP_COUNT\"\n\n/**\n * @description Add a timer. Not yet implemented since we have an unique timer at the moment.\n * @TODO #1 add a list of timer so we can measure different things in parrallel\n * @param {JSON} payload - new timer\n */\nexport function addTimer (payload) {\n    return {\n        type: ADD_TIMER,\n        payload\n    }\n}\n\n/**\n * @description Removes a timer. Not yet implemented since we have an unique timer at the moment.\n * @TODO #1\n * @param {JSON} payload - old timer\n */\nexport function removeTimer (payload) {\n    return {\n        type: REMOVE_TIMER,\n        payload\n    }\n}\n\nexport function toggleTimer (payload) {\n    return {\n        type: TOGGLE_TIMER,\n        payload\n    }\n}\n\n/**\n * @description Increments the timer by a value defined in the reducer at a tick defined in the container\n * @return { type: Symbol }\n * @example\n *  ```js\n *      dispatch(count())\n *  ```\n */\nexport function count () {\n    return { type: COUNT }\n}\n\n/**\n * @description Stops the increment of the timer\n * @return { type: Symbol }\n * @deprecated\n * @example\n *  ```js\n *      dispatch(stopCount())\n * ```\n */\nexport function stopCount () {\n    return { type: STOP_COUNT }\n}\n"},"/workspace/tt/src/redux/actions/todos.js":{"language":"javascript","mutants":[{"id":"148","location":{"end":{"column":35,"line":15},"start":{"column":25,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"150","location":{"end":{"column":37,"line":19},"start":{"column":26,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"149","location":{"end":{"column":51,"line":17},"start":{"column":33,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"151","location":{"end":{"column":41,"line":29},"start":{"column":28,"line":29}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"152","location":{"end":{"column":37,"line":39},"start":{"column":26,"line":39}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"156","location":{"end":{"column":6,"line":60},"start":{"column":12,"line":57}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"159","location":{"end":{"column":2,"line":83},"start":{"column":38,"line":78}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"158","location":{"end":{"column":6,"line":67},"start":{"column":12,"line":64}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"155","location":{"end":{"column":2,"line":61},"start":{"column":42,"line":56}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"154","location":{"end":{"column":6,"line":53},"start":{"column":12,"line":50}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"162","location":{"end":{"column":6,"line":97},"start":{"column":12,"line":94}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"160","location":{"end":{"column":6,"line":82},"start":{"column":12,"line":79}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"153","location":{"end":{"column":2,"line":54},"start":{"column":35,"line":49}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"157","location":{"end":{"column":2,"line":68},"start":{"column":36,"line":63}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"161","location":{"end":{"column":2,"line":98},"start":{"column":36,"line":93}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"}],"source":"/**\n * @file redux/actions/todos.js\n * @test redux/actions/todos.test.js\n * @description Defines the actions to manage a list of todos\n */\n\n/**\n * @description ADD_TODO actionType.\n * @type String\n * @example\n * ```js\n *      dispatch({ type: ADD_TODO, payload: { name: \"do the wishes\" } })\n * ```\n */\nexport const ADD_TODO = \"ADD_TODO\"\n\nexport const TOGGLE_EDIT_TODO = \"TOGGLE_EDIT_TODO\"\n\nexport const EDIT_TODO = \"EDIT_TODO\"\n\n/**\n * @description REMOVE_TODO actionType\n * @type String\n * @example\n * ```js\n *      dispatch({ type: REMOVE_TODO, payload: { id: 1} })\n * ```\n * */\nexport const REMOVE_TODO = \"REMOVE_TODO\"\n\n/**\n * @description NEXT_TODO actionType\n * @type String\n * @example\n * ```js\n *      dispatch({ type: NEXT_TODO , payload: { name: \"do the wishes\" } })\n * ```\n */\nexport const NEXT_TODO = \"NEXT_TODO\"\n\n/**\n * @description Adds a todo to the list\n * @param {JSON} payload - new todo\n * @example\n * ```js\n *      dispatch(addTodo({ name: \"do the wishes\" }))\n * ```\n */\nexport function addTodo (payload) {\n    return {\n        type: ADD_TODO,\n        payload\n    }\n}\n\nexport function toggleEditTodo (payload) {\n    return {\n        type: TOGGLE_EDIT_TODO,\n        payload\n    }\n}\n\nexport function editTodo (payload) {\n    return {\n        type: EDIT_TODO,\n        payload\n    }\n}\n\n/**\n * @description Removes a todo from the list\n * @param {JSON} payload - old todo\n * @example\n * ```js\n *      dispatch(removeTodo({ id: 1 }))\n * ```\n */\nexport function removeTodo (payload) {\n    return {\n        type: REMOVE_TODO,\n        payload\n    }\n}\n\n/**\n * @description Set the next todo in the list as active todo\n * @param {time: number} payload - timer for the todo\n * @example\n * ```js\n *      dispatch(nextTodo({ time: 1240 }))\n *  ```\n */\nexport function nextTodo (payload) {\n    return {\n        type: NEXT_TODO,\n        payload\n    }\n}\n"},"/workspace/tt/src/redux/initialState/index.js":{"language":"javascript","mutants":[{"id":"163","location":{"end":{"column":62,"line":4},"start":{"column":24,"line":4}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"164","location":{"end":{"column":48,"line":4},"start":{"column":43,"line":4}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Timeout"},{"id":"166","location":{"end":{"column":2,"line":105},"start":{"column":16,"line":6}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"165","location":{"end":{"column":61,"line":4},"start":{"column":56,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"168","location":{"end":{"column":23,"line":9},"start":{"column":18,"line":9}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Killed"},{"id":"167","location":{"end":{"column":6,"line":11},"start":{"column":12,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"170","location":{"end":{"column":10,"line":34},"start":{"column":16,"line":13}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"169","location":{"end":{"column":6,"line":35},"start":{"column":15,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"171","location":{"end":{"column":14,"line":33},"start":{"column":13,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"182","location":{"end":{"column":6,"line":80},"start":{"column":14,"line":36}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"175","location":{"end":{"column":18,"line":31},"start":{"column":27,"line":23}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"172","location":{"end":{"column":39,"line":16},"start":{"column":23,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"174","location":{"end":{"column":42,"line":19},"start":{"column":27,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"177","location":{"end":{"column":26,"line":29},"start":{"column":25,"line":25}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"173","location":{"end":{"column":18,"line":22},"start":{"column":25,"line":18}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"180","location":{"end":{"column":43,"line":28},"start":{"column":36,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"178","location":{"end":{"column":56,"line":26},"start":{"column":35,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"176","location":{"end":{"column":22,"line":30},"start":{"column":30,"line":24}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Timeout"},{"id":"179","location":{"end":{"column":54,"line":27},"start":{"column":33,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"181","location":{"end":{"column":32,"line":32},"start":{"column":30,"line":32}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Timeout"},{"id":"183","location":{"end":{"column":20,"line":37},"start":{"column":15,"line":37}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Timeout"},{"id":"184","location":{"end":{"column":23,"line":38},"start":{"column":18,"line":38}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Timeout"},{"id":"185","location":{"end":{"column":10,"line":78},"start":{"column":16,"line":39}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"186","location":{"end":{"column":14,"line":52},"start":{"column":13,"line":40}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"187","location":{"end":{"column":40,"line":42},"start":{"column":30,"line":42}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"190","location":{"end":{"column":39,"line":45},"start":{"column":31,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"189","location":{"end":{"column":43,"line":44},"start":{"column":32,"line":44}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"194","location":{"end":{"column":14,"line":65},"start":{"column":13,"line":53}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"195","location":{"end":{"column":40,"line":55},"start":{"column":30,"line":55}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"193","location":{"end":{"column":56,"line":49},"start":{"column":22,"line":49}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"192","location":{"end":{"column":36,"line":48},"start":{"column":27,"line":48}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"188","location":{"end":{"column":18,"line":47},"start":{"column":26,"line":43}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"196","location":{"end":{"column":18,"line":60},"start":{"column":26,"line":56}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"191","location":{"end":{"column":32,"line":46},"start":{"column":29,"line":46}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"197","location":{"end":{"column":44,"line":57},"start":{"column":32,"line":57}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"198","location":{"end":{"column":39,"line":58},"start":{"column":31,"line":58}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"199","location":{"end":{"column":32,"line":59},"start":{"column":29,"line":59}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"200","location":{"end":{"column":37,"line":61},"start":{"column":27,"line":61}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"203","location":{"end":{"column":49,"line":68},"start":{"column":30,"line":68}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"201","location":{"end":{"column":42,"line":62},"start":{"column":22,"line":62}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"202","location":{"end":{"column":14,"line":77},"start":{"column":13,"line":66}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"205","location":{"end":{"column":42,"line":70},"start":{"column":32,"line":70}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"207","location":{"end":{"column":32,"line":72},"start":{"column":29,"line":72}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"204","location":{"end":{"column":18,"line":73},"start":{"column":26,"line":69}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"209","location":{"end":{"column":20,"line":79},"start":{"column":18,"line":79}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Timeout"},{"id":"214","location":{"end":{"column":53,"line":86},"start":{"column":49,"line":86}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"206","location":{"end":{"column":39,"line":71},"start":{"column":31,"line":71}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"208","location":{"end":{"column":37,"line":74},"start":{"column":27,"line":74}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"213","location":{"end":{"column":70,"line":86},"start":{"column":38,"line":86}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"212","location":{"end":{"column":18,"line":89},"start":{"column":17,"line":85}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"211","location":{"end":{"column":14,"line":99},"start":{"column":13,"line":84}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Timeout"},{"id":"210","location":{"end":{"column":6,"line":104},"start":{"column":5,"line":82}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"215","location":{"end":{"column":68,"line":86},"start":{"column":63,"line":86}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Timeout"},{"id":"216","location":{"end":{"column":34,"line":87},"start":{"column":28,"line":87}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"218","location":{"end":{"column":18,"line":93},"start":{"column":20,"line":89}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"217","location":{"end":{"column":35,"line":88},"start":{"column":30,"line":88}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Timeout"},{"id":"220","location":{"end":{"column":53,"line":90},"start":{"column":49,"line":90}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"219","location":{"end":{"column":70,"line":90},"start":{"column":38,"line":90}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"222","location":{"end":{"column":35,"line":91},"start":{"column":28,"line":91}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"223","location":{"end":{"column":35,"line":92},"start":{"column":30,"line":92}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Timeout"},{"id":"231","location":{"end":{"column":24,"line":102},"start":{"column":19,"line":102}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"221","location":{"end":{"column":68,"line":90},"start":{"column":63,"line":90}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Timeout"},{"id":"226","location":{"end":{"column":53,"line":94},"start":{"column":49,"line":94}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Timeout"},{"id":"224","location":{"end":{"column":18,"line":97},"start":{"column":20,"line":93}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"225","location":{"end":{"column":70,"line":94},"start":{"column":38,"line":94}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"227","location":{"end":{"column":68,"line":94},"start":{"column":63,"line":94}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Timeout"},{"id":"228","location":{"end":{"column":35,"line":95},"start":{"column":28,"line":95}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"230","location":{"end":{"column":23,"line":101},"start":{"column":18,"line":101}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Timeout"},{"id":"229","location":{"end":{"column":35,"line":96},"start":{"column":30,"line":96}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Timeout"},{"id":"232","location":{"end":{"column":20,"line":103},"start":{"column":18,"line":103}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Timeout"}],"source":"import chance from \"chance\"\nimport password from \"password-generator\"\n\nconst createPassword = () => password(10, false, null, \"bc-\")\n\nexport default {\n    timer: {\n        value: 0,\n        enabled: false,\n        timeout: 1000\n    },\n    projects: {\n        items: [\n            {\n                id: chance().ssn(),\n                name: \"Projet de test\",\n                createdAt: new Date(),\n                budget: {\n                    type: \"DIVIDED_MONTH\",\n                    ratePerHour: 50,\n                    taxes: 20.6\n                },\n                duration: {\n                    history: [\n                        {\n                            from: \"2020-01-01 00:00:00\",\n                            to: \"2020-01-31 00:00:00\",\n                            total: \"P3H30\"\n                        }\n                    ]\n                },\n                description: \"\"\n            }\n        ]\n    },\n    clients: {\n        init: false,\n        loading: false,\n        items: [\n            {\n                id: chance().ssn(),\n                companyName: \"client A\",\n                contact: {\n                    firstName: \"Catherine\",\n                    lastName: \"RIGOLE\",\n                    gender: \"F\"\n                },\n                userName: \"CRigole\",\n                URL: \"http://convergence-evolution.com\",\n                password: createPassword(),\n                createdAt: new Date()\n            },\n            {\n                id: chance().ssn(),\n                companyName: \"client B\",\n                contact: {\n                    firstName: \"Jean-Louis\",\n                    lastName: \"COSTES\",\n                    gender: \"M\"\n                },\n                userName: \"JLCostes\",\n                URL: \"jeanlouiscostes.fr\",\n                password: createPassword(),\n                createdAt: new Date()\n            },\n            {\n                id: chance().ssn(),\n                companyName: \"10strict Tonneins\",\n                contact: {\n                    firstName: \"Fabienne\",\n                    lastName: \"EUCHER\",\n                    gender: \"F\"\n                },\n                userName: \"10strict\",\n                password: createPassword(),\n                createdAt: new Date()\n            }\n        ],\n        history: []\n    },\n    todos:\n    {\n        items:\n            [\n                {\n                    id: chance().ssn({ ssnFour: true, dashes: false }),\n                    label: \"todo\",\n                    editing: false\n                }, {\n                    id: chance().ssn({ ssnFour: true, dashes: false }),\n                    label: \"todoA\",\n                    editing: false\n                }, {\n                    id: chance().ssn({ ssnFour: true, dashes: false }),\n                    label: \"todoB\",\n                    editing: false\n                }\n\n            ],\n        current: {},\n        running: false,\n        finished: false,\n        history: []\n    }\n}\n"},"/workspace/tt/src/redux/reducers/clients.js":{"language":"javascript","mutants":[{"id":"233","location":{"end":{"column":2,"line":18},"start":{"column":72,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"236","location":{"end":{"column":41,"line":8},"start":{"column":37,"line":8}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"234","location":{"end":{"column":55,"line":8},"start":{"column":5,"line":7}},"mutatorName":"ConditionalExpression","replacement":"case clients.FETCH_CLIENT_INIT:","status":"Timeout"},{"id":"235","location":{"end":{"column":55,"line":8},"start":{"column":16,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"237","location":{"end":{"column":53,"line":8},"start":{"column":49,"line":8}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Timeout"},{"id":"242","location":{"end":{"column":129,"line":12},"start":{"column":5,"line":11}},"mutatorName":"ConditionalExpression","replacement":"case clients.FETCH_CLIENT_SUCCESS:","status":"Survived"},{"id":"240","location":{"end":{"column":41,"line":10},"start":{"column":37,"line":10}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Timeout"},{"id":"238","location":{"end":{"column":56,"line":10},"start":{"column":5,"line":9}},"mutatorName":"ConditionalExpression","replacement":"case clients.FETCH_CLIENT_RUNNING:","status":"Timeout"},{"id":"239","location":{"end":{"column":56,"line":10},"start":{"column":16,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"244","location":{"end":{"column":42,"line":12},"start":{"column":37,"line":12}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Timeout"},{"id":"243","location":{"end":{"column":129,"line":12},"start":{"column":16,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"241","location":{"end":{"column":54,"line":10},"start":{"column":49,"line":10}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Timeout"},{"id":"245","location":{"end":{"column":55,"line":12},"start":{"column":50,"line":12}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Timeout"},{"id":"246","location":{"end":{"column":126,"line":12},"start":{"column":87,"line":12}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Timeout"},{"id":"247","location":{"end":{"column":87,"line":14},"start":{"column":5,"line":13}},"mutatorName":"ConditionalExpression","replacement":"case clients.FETCH_CLIENT_ERROR:","status":"Timeout"},{"id":"248","location":{"end":{"column":87,"line":14},"start":{"column":16,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"249","location":{"end":{"column":42,"line":14},"start":{"column":37,"line":14}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Timeout"},{"id":"250","location":{"end":{"column":55,"line":14},"start":{"column":50,"line":14}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Timeout"},{"id":"251","location":{"end":{"column":21,"line":16},"start":{"column":5,"line":15}},"mutatorName":"ConditionalExpression","replacement":"default:","status":"Timeout"}],"source":"import * as clients from \"../actions/clients\"\nimport initialState from \"../initialState\"\nimport _ from \"lodash\"\n\nexport default function clientsReducer (state = initialState, actions) {\n    switch (actions.type) {\n    case clients.FETCH_CLIENT_INIT:\n        return { ...state, loading: true, init: true }\n    case clients.FETCH_CLIENT_RUNNING:\n        return { ...state, loading: true, init: false }\n    case clients.FETCH_CLIENT_SUCCESS:\n        return { ...state, loading: false, init: false, error: null, items: _.flatten([...state.items, actions.payload.items]) }\n    case clients.FETCH_CLIENT_ERROR:\n        return { ...state, loading: false, init: false, error: actions.payload.error }\n    default:\n        return state\n    }\n}\n"},"/workspace/tt/src/redux/reducers/index.js":{"language":"javascript","mutants":[{"id":"252","location":{"end":{"column":2,"line":10},"start":{"column":32,"line":6}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"}],"source":"import timerReducer from \"./timer\"\nimport todosReducer from \"./todos\"\nimport { combineReducers } from \"redux\"\nimport clientsReducer from \"./clients\"\n\nexport default combineReducers({\n    timer: timerReducer,\n    todos: todosReducer,\n    clients: clientsReducer\n})\n"},"/workspace/tt/src/redux/reducers/timer.js":{"language":"javascript","mutants":[{"id":"254","location":{"end":{"column":38,"line":7},"start":{"column":5,"line":6}},"mutatorName":"ConditionalExpression","replacement":"case timer.ADD_TIMER:","status":"Timeout"},{"id":"259","location":{"end":{"column":54,"line":11},"start":{"column":16,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"257","location":{"end":{"column":38,"line":9},"start":{"column":16,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"253","location":{"end":{"column":2,"line":19},"start":{"column":70,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"256","location":{"end":{"column":38,"line":9},"start":{"column":5,"line":8}},"mutatorName":"ConditionalExpression","replacement":"case timer.REMOVE_TIMER:","status":"Timeout"},{"id":"255","location":{"end":{"column":38,"line":7},"start":{"column":16,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"258","location":{"end":{"column":54,"line":11},"start":{"column":5,"line":10}},"mutatorName":"ConditionalExpression","replacement":"case timer.TOGGLE_TIMER:","status":"Timeout"},{"id":"261","location":{"end":{"column":76,"line":13},"start":{"column":16,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"260","location":{"end":{"column":76,"line":13},"start":{"column":5,"line":12}},"mutatorName":"ConditionalExpression","replacement":"case timer.COUNT:","status":"Timeout"},{"id":"262","location":{"end":{"column":50,"line":13},"start":{"column":35,"line":13}},"mutatorName":"ArithmeticOperator","replacement":"state.value - 1","status":"Timeout"},{"id":"265","location":{"end":{"column":21,"line":17},"start":{"column":5,"line":16}},"mutatorName":"ConditionalExpression","replacement":"default:","status":"Timeout"},{"id":"263","location":{"end":{"column":72,"line":15},"start":{"column":5,"line":14}},"mutatorName":"ConditionalExpression","replacement":"case timer.STOP_COUNT:","status":"Timeout"},{"id":"264","location":{"end":{"column":72,"line":15},"start":{"column":16,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"}],"source":"import initialState from \"../initialState\"\nimport * as timer from \"../actions/timer\"\n\nexport default function timerReducer (state = initialState, actions) {\n    switch (actions.type) {\n    case timer.ADD_TIMER:\n        return { ...state, value: 0 }\n    case timer.REMOVE_TIMER:\n        return { ...state, value: 0 }\n    case timer.TOGGLE_TIMER:\n        return { ...state, enabled: actions.payload }\n    case timer.COUNT:\n        return { ...state, value: state.value + 1, started_at: new Date() }\n    case timer.STOP_COUNT:\n        return { ...state, value: state.value, stopped_at: new Date() }\n    default:\n        return state\n    }\n}\n"},"/workspace/tt/src/redux/reducers/todos.js":{"language":"javascript","mutants":[{"id":"266","location":{"end":{"column":2,"line":40},"start":{"column":70,"line":6}},"mutatorName":"BlockStatement","replacement":"{}","status":"Timeout"},{"id":"267","location":{"end":{"column":138,"line":9},"start":{"column":5,"line":8}},"mutatorName":"ConditionalExpression","replacement":"case todo.ADD_TODO:","status":"Timeout"},{"id":"268","location":{"end":{"column":138,"line":9},"start":{"column":16,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"270","location":{"end":{"column":135,"line":9},"start":{"column":52,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"271","location":{"end":{"column":103,"line":9},"start":{"column":71,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"272","location":{"end":{"column":86,"line":9},"start":{"column":82,"line":9}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Timeout"},{"id":"275","location":{"end":{"column":10,"line":14},"start":{"column":16,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"269","location":{"end":{"column":136,"line":9},"start":{"column":35,"line":9}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Timeout"},{"id":"273","location":{"end":{"column":101,"line":9},"start":{"column":96,"line":9}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Timeout"},{"id":"277","location":{"end":{"column":76,"line":13},"start":{"column":46,"line":13}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"274","location":{"end":{"column":10,"line":14},"start":{"column":5,"line":10}},"mutatorName":"ConditionalExpression","replacement":"case todo.TOGGLE_EDIT_TODO:","status":"Timeout"},{"id":"276","location":{"end":{"column":121,"line":13},"start":{"column":36,"line":13}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"279","location":{"end":{"column":76,"line":13},"start":{"column":46,"line":13}},"mutatorName":"EqualityOperator","replacement":"item.id !== actions.payload.id","status":"Survived"},{"id":"278","location":{"end":{"column":76,"line":13},"start":{"column":46,"line":13}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Timeout"},{"id":"283","location":{"end":{"column":85,"line":17},"start":{"column":48,"line":17}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"281","location":{"end":{"column":112,"line":13},"start":{"column":99,"line":13}},"mutatorName":"BooleanLiteral","replacement":"item.editing","status":"Timeout"},{"id":"280","location":{"end":{"column":114,"line":13},"start":{"column":79,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"282","location":{"end":{"column":10,"line":25},"start":{"column":5,"line":15}},"mutatorName":"ConditionalExpression","replacement":"case todo.EDIT_TODO:","status":"Timeout"},{"id":"284","location":{"end":{"column":85,"line":17},"start":{"column":60,"line":17}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Timeout"},{"id":"292","location":{"end":{"column":66,"line":21},"start":{"column":64,"line":21}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"285","location":{"end":{"column":85,"line":17},"start":{"column":60,"line":17}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Timeout"},{"id":"288","location":{"end":{"column":14,"line":24},"start":{"column":30,"line":20}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"286","location":{"end":{"column":85,"line":17},"start":{"column":60,"line":17}},"mutatorName":"EqualityOperator","replacement":"id !== actions.payload.id","status":"Timeout"},{"id":"289","location":{"end":{"column":28,"line":21},"start":{"column":17,"line":21}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Timeout"},{"id":"287","location":{"end":{"column":10,"line":25},"start":{"column":16,"line":18}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"291","location":{"end":{"column":28,"line":21},"start":{"column":17,"line":21}},"mutatorName":"EqualityOperator","replacement":"index === 0","status":"Timeout"},{"id":"290","location":{"end":{"column":28,"line":21},"start":{"column":17,"line":21}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Timeout"},{"id":"294","location":{"end":{"column":79,"line":22},"start":{"column":42,"line":22}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"293","location":{"end":{"column":127,"line":22},"start":{"column":17,"line":22}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"296","location":{"end":{"column":79,"line":22},"start":{"column":54,"line":22}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Timeout"},{"id":"298","location":{"end":{"column":125,"line":22},"start":{"column":120,"line":22}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Timeout"},{"id":"295","location":{"end":{"column":79,"line":22},"start":{"column":54,"line":22}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Timeout"},{"id":"299","location":{"end":{"column":51,"line":23},"start":{"column":17,"line":23}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Timeout"},{"id":"297","location":{"end":{"column":79,"line":22},"start":{"column":54,"line":22}},"mutatorName":"EqualityOperator","replacement":"id !== actions.payload.id","status":"Timeout"},{"id":"300","location":{"end":{"column":51,"line":23},"start":{"column":17,"line":23}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Timeout"},{"id":"304","location":{"end":{"column":90,"line":23},"start":{"column":88,"line":23}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Timeout"},{"id":"303","location":{"end":{"column":84,"line":23},"start":{"column":75,"line":23}},"mutatorName":"ArithmeticOperator","replacement":"index - 1","status":"Timeout"},{"id":"301","location":{"end":{"column":51,"line":23},"start":{"column":17,"line":23}},"mutatorName":"EqualityOperator","replacement":"index === state.items.length + 1","status":"Timeout"},{"id":"302","location":{"end":{"column":50,"line":23},"start":{"column":28,"line":23}},"mutatorName":"ArithmeticOperator","replacement":"state.items.length - 1","status":"Timeout"},{"id":"305","location":{"end":{"column":94,"line":27},"start":{"column":5,"line":26}},"mutatorName":"ConditionalExpression","replacement":"case todo.REMOVE_TODO:","status":"Timeout"},{"id":"306","location":{"end":{"column":94,"line":27},"start":{"column":16,"line":27}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"307","location":{"end":{"column":91,"line":27},"start":{"column":54,"line":27}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Timeout"},{"id":"309","location":{"end":{"column":91,"line":27},"start":{"column":66,"line":27}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Timeout"},{"id":"308","location":{"end":{"column":91,"line":27},"start":{"column":66,"line":27}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Timeout"},{"id":"312","location":{"end":{"column":10,"line":36},"start":{"column":16,"line":29}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"311","location":{"end":{"column":10,"line":36},"start":{"column":5,"line":28}},"mutatorName":"ConditionalExpression","replacement":"case todo.NEXT_TODO:","status":"Timeout"},{"id":"310","location":{"end":{"column":91,"line":27},"start":{"column":66,"line":27}},"mutatorName":"EqualityOperator","replacement":"id === actions.payload.id","status":"Timeout"},{"id":"315","location":{"end":{"column":137,"line":33},"start":{"column":93,"line":33}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"314","location":{"end":{"column":100,"line":32},"start":{"column":22,"line":32}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"316","location":{"end":{"column":26,"line":34},"start":{"column":22,"line":34}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Timeout"},{"id":"313","location":{"end":{"column":72,"line":31},"start":{"column":70,"line":31}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Timeout"},{"id":"317","location":{"end":{"column":50,"line":35},"start":{"column":23,"line":35}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Timeout"},{"id":"320","location":{"end":{"column":21,"line":38},"start":{"column":5,"line":37}},"mutatorName":"ConditionalExpression","replacement":"default:","status":"Timeout"},{"id":"319","location":{"end":{"column":50,"line":35},"start":{"column":23,"line":35}},"mutatorName":"EqualityOperator","replacement":"_.last(state.items) != null","status":"Timeout"},{"id":"318","location":{"end":{"column":50,"line":35},"start":{"column":23,"line":35}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Timeout"}],"source":"import initialState from \"../initialState\"\nimport * as todo from \"../actions/todos\"\nimport _ from \"lodash\"\nimport chance from \"chance\"\n\nexport default function timerReducer (state = initialState, actions) {\n    switch (actions.type) {\n    case todo.ADD_TODO:\n        return { ...state, items: [...state.items, { id: chance().ssn({ ssnFour: true, dashes: false }), label: actions.payload.name }] }\n    case todo.TOGGLE_EDIT_TODO:\n        return {\n            ...state,\n            items: state.items.map((item) => item.id === actions.payload.id ? { ...item, editing: !item.editing } : item)\n        }\n    case todo.EDIT_TODO:\n        // eslint-disable-next-line no-case-declarations\n        const index = _.findIndex(state.items, ({ id }) => id === actions.payload.id)\n        return {\n            ...state,\n            items: _.flatten([\n                index !== 0 ? _.slice(state.items, 0, index) : [],\n                { ..._.find(state.items, ({ id }) => id === actions.payload.id), label: actions.payload.name, editing: false },\n                index !== (state.items.length + 1) ? _.slice(state.items, index + 1) : []\n            ])\n        }\n    case todo.REMOVE_TODO:\n        return { ...state, items: state.items.filter(({ id }) => id !== actions.payload.id) }\n    case todo.NEXT_TODO:\n        return {\n            ...state,\n            items: _.initial(state.items) ? _.initial(state.items) : [],\n            current: { ..._.last(state.items), time: actions.payload.time, started_at: new Date() },\n            history: _.reject(_.concat(state.history, _.isEmpty(state.current) ? Object() : { ...state.current, stopped_at: new Date() }), _.isEmpty),\n            running: true,\n            finished: _.last(state.items) == null\n        }\n    default:\n        return state\n    }\n}\n"},"/workspace/tt/src/services/keyboard.onEnter.js":{"language":"javascript","mutants":[{"id":"323","location":{"end":{"column":30,"line":2},"start":{"column":9,"line":2}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"322","location":{"end":{"column":2,"line":6},"start":{"column":42,"line":1}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"321","location":{"end":{"column":2,"line":6},"start":{"column":17,"line":1}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"325","location":{"end":{"column":30,"line":2},"start":{"column":9,"line":2}},"mutatorName":"EqualityOperator","replacement":"event.key !== \"Enter\"","status":"Survived"},{"id":"324","location":{"end":{"column":30,"line":2},"start":{"column":9,"line":2}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"327","location":{"end":{"column":6,"line":5},"start":{"column":32,"line":2}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed"},{"id":"326","location":{"end":{"column":30,"line":2},"start":{"column":23,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"328","location":{"end":{"column":32,"line":4},"start":{"column":30,"line":4}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"}],"source":"const onEnter = (callback) => (event) => {\n    if (event.key === \"Enter\") {\n        callback(event.target.value)\n        event.target.value = \"\"\n    }\n}\nexport default onEnter\n"}},"schemaVersion":"1.0","thresholds":{"break":null,"high":80,"low":60}};